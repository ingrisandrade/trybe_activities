- Uma imagem Docker é um arquivo imutável e a partir dele um ou mais containers podem ser gerados. 

- Uma imagem pode ser criada a partir do comando docker build, seguindo as instruções contidas em um arquivo chamado Dockerfile.
    - build(‘construir’ em português);
    - O Dockerfile é um arquivo que contém as instruções necessárias (como uma receita) para construirmos a imagem Docker exatamente como desejamos. Esse arquivo nos mostra as bibliotecas que devem ser instaladas, arquivos que devem ser inicializados etc.

- docker pull <nome-da-imagem> | Baixa e salva uma imagem do Docker Hub diretamente do Registry sem precisar executar.
    Ex.: docker pull alpine:3.14
    Neste exemplo foi obtida a imagem alpine, com a tag específica 3.14.

- É possível ter vários contêineres a partir de uma imagem Docker!
- Mesmo baseado na mesma Imagem Docker, os containers executam em contextos diferentes.

- docker rmi <id-da-img> | Para remover uma imagem Docker do computador.
    - rmi é um acrônimo das palavras ReMover Imagem

- docker system prune -af | Remove todos os containers e imagens Docker que estejam no computador.

- Algumas anotações sobre dockerfile:

    - FROM | significa que vamos começar a construção desta imagem a partir da imagem Docker já existente!

    - CMD | mostra qual comando deve ser utilizado ao iniciar a imagem como um container;
        -O comando CDM aceita uma lista de parâmetros ou apenas comandos, sem declarar como uma lista.
        Exemplos:   CMD ["echo", "Eu sou uma pessoa estudante da Trybe!"]
                    CMD echo "olá mundo"

- docker build <flags> -t <nome-da-imagem> <contexto> | Para construir uma imagem docker.
    - -t | indicará qual será o nome da imagem, e também a tag, se utilizar o formato <nome>:<tag>
    - Um contexto, ou seja, em qual caminho de pasta o Docker deve se basear para processar o arquivo Dockerfile.
        - Normalmente utilizamos apenas . (ponto final), que indica a pasta atual.

- 

